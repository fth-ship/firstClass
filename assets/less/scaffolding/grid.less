/**
 * Grid
 *
 * Set up responsive grid system.
 * 
 * This is heavily infleuenced by the Semantic Grid http://semantic.gs
 *
 * @author Abban Dunne http://abandon.ie
 * @author James Wilson http://jimmynotjim.com
 * @version 1.1
 */

/* Utility variable â€” you should never need to modify this */
@gridsystem-width: @columns * 1px;
@padding: @gutter-width*0.5;
@correction: 0.5 / @max-width * 100 * 1%; // NOTE: Check this in IE

/* The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack */
.clearfix {
	&:before,
	&:after{
	    content:"";
	    display:table;
	}
	&:after{
	    clear:both;
	}
}

/* Ensure grid columns are set to border-boxes. This is essential */
.border-box(@box: border-box){
	-webkit-box-sizing: @box;
	-moz-box-sizing: @box;
	box-sizing: @box;
}

/* Our row container */
.row(@padding:0){
	.clearfix();
	.border-box();

	display:block;
	max-width: @max-width;
	margin: 0 auto;
	padding:0 @padding;
}

/* Our column container */
.column(@x, @padding:@padding, @columns:@columns){
	.border-box();

	display: inline;
	float: left;
	width: 100%*(@x / @columns);
	padding: 0 @padding;
}

/* Push adds left padding */
.push(@offset:1, @columns:@columns) {
	margin-left: 100%*(@offset / @columns);
}

/* Pull adds right padding */
.pull(@offset:1, @columns:@columns) {
	margin-right: 100%*(@offset / @columns);
}



.grid-example {
    .clearfix();
    .column(12);
}
.container {
    //background:#ccc;	
    .clearfix();
    .column(12, 0);
    div div {
        background: @green;
        height: 3em;
        margin-bottom: 1.5em;
        border: @gutter solid @black-10;
        border-top:0;
        border-bottom:0;
    }
    .single,
    .double,
    .triple,
    .quadruple,
    .quintuple {	
        .clearfix();
        div:last-child {
            background:@black-20;
        }
    }
    .single {
        >div:first-child{.column(1);}
        >div:last-child{.column(11);}
    }
    .double {
        >div:first-child{.column(2);}
        >div:last-child{.column(10);}
    }
    .triple {
        >div:first-child{.column(3);}
        >div:last-child{.column(9);}
    }
    .quadruple {
        >div:first-child{.column(4);}
        >div:last-child{.column(8);}
    }
    .quintuple {
        >div:first-child{.column(5);}
        >div:last-child{.column(7);}
    }
}